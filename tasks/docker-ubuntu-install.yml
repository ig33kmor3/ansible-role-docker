# check if docker is installed before proceeding
- name: check if docker is already installed
  shell: dpkg -l | grep -i 'docker-ce'
  args:
    executable: /bin/bash
    warn: false
  register: docker_output
  failed_when: docker_output.stderr != ""

# install required repo packages
- name: install docker package dependencies
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes
  when: docker_output.stdout == ''

# add docker gpg key to talk to repo
- name: add docker gpg key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg 
    state: present
  when: docker_output.stdout == ''

# add docker repo to host
- name: update host package repository
  shell: |
    add-apt-repository \
        "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) \
        stable" -y
  args:
    executable: /bin/bash
  when: docker_output.stdout == ''


# install docker on host
- name: install docker on host
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes
  notify:
    - add-docker-user
  when: docker_output.stdout == ''

# configure docker for kubernetes deployment
- name: configure docker for cgroup for systemd
  shell: 
    cmd: |
      cat > /etc/docker/daemon.json <<EOF
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
      EOF
      mkdir -p /etc/systemd/system/docker.service.d
  args:
    executable: /bin/bash
  notify:
    - enable-docker
    - restart-docker
  when: docker_output.stdout == ''